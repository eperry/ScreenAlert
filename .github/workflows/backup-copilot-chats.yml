name: Backup Copilot Chats

on:
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:  # Allow manual triggering
  
  # Trigger when chat files are added
  push:
    paths:
      - 'docs/copilot-chats/**'

jobs:
  backup-chats:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for better analysis
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Create chat summary
      run: |
        # Create automated summary of chat sessions
        cd docs/copilot-chats
        
        # Count chat files
        CHAT_COUNT=$(find . -name "*.md" -not -name "README.md" -not -name "_template.md" | wc -l)
        
        # Get date range
        FIRST_DATE=$(find . -name "*.md" -not -name "README.md" -not -name "_template.md" | sort | head -1 | grep -oE '[0-9]{4}-[0-9]{2}-[0-9]{2}' || echo "N/A")
        LAST_DATE=$(find . -name "*.md" -not -name "README.md" -not -name "_template.md" | sort | tail -1 | grep -oE '[0-9]{4}-[0-9]{2}-[0-9]{2}' || echo "N/A")
        
        # Create summary file
        cat > session-summary.md << EOF
        # Copilot Chat Sessions Summary
        
        **Generated:** $(date -u)
        **Total Sessions:** $CHAT_COUNT
        **Date Range:** $FIRST_DATE to $LAST_DATE
        
        ## Recent Sessions
        
        $(find . -name "*.md" -not -name "README.md" -not -name "_template.md" -not -name "session-summary.md" | sort -r | head -10 | while read file; do
          echo "- [\`$(basename "$file" .md)\`]($file)"
        done)
        
        ## Session Statistics
        
        - Auto-exported sessions: $(find . -name "*auto-exported*" | wc -l)
        - Manual sessions: $(find . -name "*.md" -not -name "*auto-exported*" -not -name "README.md" -not -name "_template.md" -not -name "session-summary.md" | wc -l)
        
        ## Repository Stats
        
        - Repository size: $(du -sh ../../ | cut -f1)
        - Chat documentation size: $(du -sh . | cut -f1)
        
        ---
        *Auto-generated by GitHub Actions*
        EOF
    
    - name: Commit summary if changed
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        if [[ -n $(git status --porcelain docs/copilot-chats/) ]]; then
          git add docs/copilot-chats/
          git commit -m "üìù Auto-update chat session summary - $(date -u +%Y-%m-%d)"
          git push
        else
          echo "No changes to commit"
        fi
    
    - name: Create backup archive
      run: |
        # Create timestamped backup
        BACKUP_NAME="copilot-chats-backup-$(date -u +%Y%m%d-%H%M%S).tar.gz"
        tar -czf "$BACKUP_NAME" docs/copilot-chats/
        
        # Store as artifact
        echo "BACKUP_FILE=$BACKUP_NAME" >> $GITHUB_ENV
    
    - name: Upload backup artifact
      uses: actions/upload-artifact@v4
      with:
        name: copilot-chats-backup
        path: ${{ env.BACKUP_FILE }}
        retention-days: 90  # Keep backups for 90 days
    
    - name: Check for large chat files
      run: |
        # Alert if any chat files are getting too large
        find docs/copilot-chats/ -name "*.md" -size +1M | while read file; do
          echo "‚ö†Ô∏è Large chat file detected: $file ($(du -sh "$file" | cut -f1))"
          echo "Consider splitting this session into multiple files."
        done
