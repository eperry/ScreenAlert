name: Build and Release ScreenAlert

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag (e.g., v1.4.0)'
        required: true
        default: 'v1.4.0'

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r screenalert_requirements.txt
        pip install nuitka
        
    - name: Build with Nuitka
      run: |
        python build_nuitka.py
        
    - name: Create release archive
      run: |
        # Create release directory
        New-Item -ItemType Directory -Force -Path "ScreenAlert-${{ github.event.inputs.version || github.ref_name }}"
        Copy-Item "dist-nuitka/ScreenAlert.exe" "ScreenAlert-${{ github.event.inputs.version || github.ref_name }}/"
        Copy-Item "README.md" "ScreenAlert-${{ github.event.inputs.version || github.ref_name }}/"
        Copy-Item "screenalert_config.json" "ScreenAlert-${{ github.event.inputs.version || github.ref_name }}/"
        
        # Create ZIP archive
        Compress-Archive -Path "ScreenAlert-${{ github.event.inputs.version || github.ref_name }}" -DestinationPath "ScreenAlert-${{ github.event.inputs.version || github.ref_name }}.zip"
        
    - name: Calculate file hashes
      run: |
        Get-FileHash "ScreenAlert-${{ github.event.inputs.version || github.ref_name }}.zip" -Algorithm SHA256 | Format-Table -AutoSize > hashes.txt
        Get-FileHash "dist-nuitka/ScreenAlert.exe" -Algorithm SHA256 | Format-Table -AutoSize >> hashes.txt
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ScreenAlert-${{ github.event.inputs.version || github.ref_name }}
        path: ScreenAlert-${{ github.event.inputs.version || github.ref_name }}.zip
        
    - name: Upload file hashes
      uses: actions/upload-artifact@v4
      with:
        name: file-hashes
        path: hashes.txt

  create-release:
    needs: build-windows
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
    permissions:
      contents: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      
    - name: Create Release with GitHub CLI
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        VERSION="${{ github.event.inputs.version || github.ref_name }}"
        
        # Create release notes
        cat << EOF > release_notes.md
        # ScreenAlert $VERSION - Antivirus-Safe Native Executable
        
        ## üõ°Ô∏è Zero Antivirus False Positives
        Built with Nuitka for native C++ compilation - completely eliminates PyInstaller antivirus issues.
        
        ## üì¶ Download
        
        **ScreenAlert-$VERSION.zip** (~78MB)
        - Single native executable (ScreenAlert.exe)
        - Configuration file (screenalert_config.json)
        - Documentation (README.md)
        
        ## üîí Security
        - Native C++ compiled executable
        - SHA256 hashes provided for integrity verification
        - Zero known antivirus false positives
        
        ## üìã What's New in v1.4.0
        - ‚úÖ Replaced PyInstaller with Nuitka (native compilation)
        - ‚úÖ Eliminated all antivirus false positives
        - ‚úÖ Reduced executable size and improved performance
        - ‚úÖ Streamlined build process for reliability
        - ‚úÖ Enhanced security with native code compilation
        
        ## üöÄ Installation
        1. Download ScreenAlert-$VERSION.zip
        2. Extract to desired location
        3. Run ScreenAlert.exe
        4. Configure monitoring regions as needed
        
        Native C++ compilation ensures maximum compatibility and security.
        EOF
        
        # Create the release
        gh release create "$VERSION" \
          --title "ScreenAlert $VERSION - Native Executable" \
          --notes-file release_notes.md \
          --draft=false \
          --prerelease=false \
          "./ScreenAlert-$VERSION/ScreenAlert-$VERSION.zip#ScreenAlert-$VERSION.zip" \
          "./file-hashes/hashes.txt#SHA256-Hashes.txt"