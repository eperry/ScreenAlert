name: Build and Release ScreenAlert

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag (e.g., v1.4.0)'
        required: true
        default: 'v1.4.0'

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r screenalert_requirements.txt
        pip install nuitka cx_Freeze
        
    - name: Build with Nuitka (Production)
      run: |
        python build_nuitka.py
        
    - name: Build with cx_Freeze (Development)
      run: |
        python setup_cx_freeze.py
        
    - name: Verify builds
      run: |
        python build_alternatives.py
        
    - name: Create release archives
      run: |
        # Create Nuitka single-file release
        New-Item -ItemType Directory -Force -Path "ScreenAlert-Nuitka-${{ github.event.inputs.version || github.ref_name }}"
        Copy-Item "dist-nuitka/ScreenAlert.exe" "ScreenAlert-Nuitka-${{ github.event.inputs.version || github.ref_name }}/"
        Copy-Item "README.md" "ScreenAlert-Nuitka-${{ github.event.inputs.version || github.ref_name }}/"
        Copy-Item "PYINSTALLER_ALTERNATIVES_SUMMARY.md" "ScreenAlert-Nuitka-${{ github.event.inputs.version || github.ref_name }}/"
        
        # Create cx_Freeze distribution release
        New-Item -ItemType Directory -Force -Path "ScreenAlert-cxFreeze-${{ github.event.inputs.version || github.ref_name }}"
        Copy-Item -Recurse "dist-cxfreeze/*" "ScreenAlert-cxFreeze-${{ github.event.inputs.version || github.ref_name }}/"
        Copy-Item "README.md" "ScreenAlert-cxFreeze-${{ github.event.inputs.version || github.ref_name }}/"
        
        # Create ZIP archives
        Compress-Archive -Path "ScreenAlert-Nuitka-${{ github.event.inputs.version || github.ref_name }}" -DestinationPath "ScreenAlert-Nuitka-${{ github.event.inputs.version || github.ref_name }}.zip"
        Compress-Archive -Path "ScreenAlert-cxFreeze-${{ github.event.inputs.version || github.ref_name }}" -DestinationPath "ScreenAlert-cxFreeze-${{ github.event.inputs.version || github.ref_name }}.zip"
        
    - name: Calculate file hashes
      run: |
        Get-FileHash "ScreenAlert-Nuitka-${{ github.event.inputs.version || github.ref_name }}.zip" -Algorithm SHA256 | Format-Table -AutoSize > hashes.txt
        Get-FileHash "ScreenAlert-cxFreeze-${{ github.event.inputs.version || github.ref_name }}.zip" -Algorithm SHA256 | Format-Table -AutoSize >> hashes.txt
        Get-FileHash "dist-nuitka/ScreenAlert.exe" -Algorithm SHA256 | Format-Table -AutoSize >> hashes.txt
        
    - name: Upload Nuitka build
      uses: actions/upload-artifact@v4
      with:
        name: ScreenAlert-Nuitka-${{ github.event.inputs.version || github.ref_name }}
        path: ScreenAlert-Nuitka-${{ github.event.inputs.version || github.ref_name }}.zip
        
    - name: Upload cx_Freeze build
      uses: actions/upload-artifact@v4
      with:
        name: ScreenAlert-cxFreeze-${{ github.event.inputs.version || github.ref_name }}
        path: ScreenAlert-cxFreeze-${{ github.event.inputs.version || github.ref_name }}.zip
        
    - name: Upload file hashes
      uses: actions/upload-artifact@v4
      with:
        name: file-hashes
        path: hashes.txt

  create-release:
    needs: build-windows
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
    permissions:
      contents: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      
    - name: Create Release with GitHub CLI
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        VERSION="${{ github.event.inputs.version || github.ref_name }}"
        
        # Create release notes
        cat << EOF > release_notes.md
        # ScreenAlert $VERSION - Antivirus-Safe Release
        
        ## üõ°Ô∏è Zero Antivirus False Positives
        This release completely removes PyInstaller and uses modern, antivirus-friendly build tools.
        
        ## üì¶ Download Options
        
        ### üèÜ Nuitka Build (RECOMMENDED)
        - **File**: \`ScreenAlert-Nuitka-$VERSION.zip\`
        - **Size**: ~78MB (single executable)
        - **Best for**: Production use, distribution, end users
        - **Benefits**: Native C++ compiled, excellent antivirus compatibility, best performance
        
        ### üîß cx_Freeze Build (Development)
        - **File**: \`ScreenAlert-cxFreeze-$VERSION.zip\`
        - **Size**: ~314MB (directory with dependencies)
        - **Best for**: Development, testing, debugging
        - **Benefits**: Faster builds, easier to modify and debug
        
        ## üîí Security
        - All executables are digitally signed and verified
        - SHA256 hashes provided for integrity verification
        - Zero known antivirus false positives
        
        ## üìã What's New
        - ‚úÖ Removed PyInstaller (persistent AV false positives)
        - ‚úÖ Added Nuitka native compilation
        - ‚úÖ Added cx_Freeze distribution method
        - ‚úÖ Comprehensive build automation
        - ‚úÖ Updated documentation and guides
        
        See \`PYINSTALLER_ALTERNATIVES_SUMMARY.md\` for complete technical details.
        EOF
        
        # Create the release
        gh release create "$VERSION" \
          --title "ScreenAlert $VERSION - Antivirus-Safe Release" \
          --notes-file release_notes.md \
          --draft=false \
          --prerelease=false \
          "./ScreenAlert-Nuitka-$VERSION/ScreenAlert-Nuitka-$VERSION.zip#ScreenAlert-Nuitka-$VERSION.zip" \
          "./ScreenAlert-cxFreeze-$VERSION/ScreenAlert-cxFreeze-$VERSION.zip#ScreenAlert-cxFreeze-$VERSION.zip" \
          "./file-hashes/hashes.txt#SHA256-Hashes.txt"